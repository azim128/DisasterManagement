generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  VOLUNTEER
}

enum UserStatus {
  ACTIVE
  PENDING
  DISABLED
}

enum AvailabilityStatus {
  AVAILABLE
  UNAVAILABLE
  ON_TASK
}

model User {
  user_id           Int       @id @default(autoincrement())
  name              String
  password          String
  email             String    @unique
  phone_number      String
  role              UserRole  @default(VOLUNTEER)
  status            UserStatus @default(PENDING)
  assigned_tasks    Task[]    

  volunteer         Volunteer?
  admin             Admin?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Volunteer {
  volunteer_id      Int                @id @default(autoincrement())
  user              User               @relation(fields: [user_id], references: [user_id])
  user_id           Int                @unique
  age               Int?
  assigned_location String?
  skills            String?
  availability_status AvailabilityStatus?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  admin_id  Int    @id @default(autoincrement())
  user      User   @relation(fields: [user_id], references: [user_id])
  user_id   Int    @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  task_id  Int    @id @default(autoincrement())
  title    String
  details  String
  user     User?  @relation(fields: [user_id], references: [user_id])
  user_id  Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Donation {
  donation_id  Int    @id @default(autoincrement())
  amount       Float
  donar_name   String? @default("Anonymous")
  donar_email  String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}